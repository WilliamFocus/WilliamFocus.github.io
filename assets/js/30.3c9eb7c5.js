(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{605:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"set-构造函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-构造函数"}},[t._v("#")]),t._v(" Set 构造函数")]),t._v(" "),s("p",[s("strong",[t._v("（——类数组数据结构，数据为独一无二，不能重复，包括 NaN，但复杂引用数据类型可重复）")])]),t._v(" "),s("div",{staticClass:"language-tsx line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-tsx"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set(3) {1, 2, 3}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("code",[t._v("Set.prototype.size")]),t._v("：返回 Set 实例的成员总数")]),t._v(" "),s("h3",{attrs:{id:"api："}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api："}},[t._v("#")]),t._v(" API：")]),t._v(" "),s("p",[s("strong",[t._v("操作方法：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Set.prototype.add(value)")]),t._v("：添加某个值，返回 Set 结构本身。\n（可链式， 覆盖，"),s("code",[t._v("-0===+0")]),t._v("，"),s("code",[t._v("NaN===NaN")]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.delete(value)")]),t._v("：删除某个值，返回一个布尔值，表示删除是否成功。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.has(value)")]),t._v("：返回一个布尔值，表示该值是否为"),s("code",[t._v("Set")]),t._v("的成员。")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.clear()")]),t._v("：清除所有成员，没有返回值。")])]),t._v(" "),s("p",[s("strong",[t._v("遍历方法：")])]),t._v(" "),s("ul",[s("li",[s("code",[t._v("Set.prototype.keys()")]),t._v("：返回键名的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.values()")]),t._v("：返回键值的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.entries()")]),t._v("：返回键值对的遍历器")]),t._v(" "),s("li",[s("code",[t._v("Set.prototype.forEach()")]),t._v("：使用回调函数遍历每个成员")])]),t._v(" "),s("p",[s("strong",[t._v("作用：")])]),t._v(" "),s("ol",[s("li",[t._v("可以轻松实现两个数组的交集、并集、差集处理等；")])]),t._v(" "),s("p",[s("strong",[t._v("注意：")])]),t._v(" "),s("p",[t._v("::: waining\n📍 1、Set 结构的 key 键名 就是 value 键值（两者是同一个值）；\n2、若直接取值需要迭代转换成数组形式；\n2、"),s("code",[t._v("WeakSet(...参数必须是可迭代对象...)")]),t._v(" 类似"),s("code",[t._v("Set()")]),t._v(" ，但不可迭代且内部值为对象且为弱引用对象（即被垃圾回收无视）；\n:::")])])}),[],!1,null,null,null);e.default=n.exports}}]);